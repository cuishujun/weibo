<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"		
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
	<bean id="propertyBean" class="org.springframework.beans.factory.config.PropertiesFactoryBean" >
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>
	 
	<bean id="applicationProperties" class="com.cubead.common.ApplicationProperties">
		<property name="prop"><ref bean="propertyBean"/></property>
	</bean>
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
				<value>classpath:hibernate.properties</value>
			</list>
		</property>
	</bean>

    <context:component-scan base-package="com.cubead"/>
    
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${hibernate.connection.driver_class}"/>
		<property name="jdbcUrl" value="${hibernate.connection.url}"/>
		<property name="user" value="${hibernate.connection.username}"/>
		<property name="password" value="${hibernate.connection.password}"/>
		
		<property name="automaticTestTable" value="c3p0_test"></property> 
	    <!--  <property name="checkoutTimeout" value="30000"></property> --> 
	    <property name="idleConnectionTestPeriod" value="60"></property> 
	    <property name="initialPoolSize" value="5"></property> 
	    <property name="maxIdleTime" value="60"></property>
	    <!--  
	    <property name="maxPoolSize" value="100"></property> 
	    <property name="minPoolSize" value="10"></property> 
	     -->
	</bean>

	<!-- SessionFactory -->
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
     			<prop key="hibernate.cglib.use_reflection_optimizer">${hibernate.cglib.use_reflection_optimizer}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.cubead.**.model</value>
			</list>
	</property>
	</bean>
	
	<bean id="commonDAO" class="com.cubead.common.dao.CommonDAO">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean> 

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	
	<!-- 事务处理 -->
	<!-- 事务拦截器，拦截指定的方法 -->
	<bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="list*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- 对于需要添加事务的业务对象进行自动代理 -->
	<bean id="businessObjectAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Service</value>
				<value>*Restful</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>  
	

	 
</beans>
